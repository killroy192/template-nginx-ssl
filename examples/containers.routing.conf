# The following mapping block declares a relationship between the
# public port the nginx-le container listens on and the service name for your service containers.
# 1. Service containers shoudl be at the same network (pub-shared-net) as nginx-le container
#    You can modify/add more networks in docker-compose files.
# 2. Nginx-le container must be initialized after service container initialization and shared network creation. 

map $server_port $stg_pass_route {
    # port => container name:port
    "443" "web:8080";

    default "localhost:$server_port";
}

server {
    server_name you-domain.com;

    # must specify docker DNS as a resolver when use variables for proxy_pass
    resolver 127.0.0.11 ipv6=off;

    # list all publically available ports for domain
    listen 80;
    listen 443;

    ssl                     on;
    ssl_certificate         SSL_CERT;
    ssl_certificate_key     SSL_KEY;
    ssl_trusted_certificate SSL_CHAIN_CERT;

    client_max_body_size 2M;

    location / {
        proxy_set_header        Host $http_host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;

        # use the mapped hostname and port for a proxy target
        proxy_pass              "http://$stg_pass_route";
    }
}

map $server_port $dev_pass_route {
    # port => name label:port
    "443" "web:8081";

    default "localhost:$server_port";
}

server {
    server_name sub.you-domain.com;

    # must specify docker DNS as a resolver when use variables for proxy_pass
    resolver 127.0.0.11 ipv6=off;

    # list all publically available ports for domain
    listen 80;
    listen 443;

    ssl                     on;
    ssl_certificate         SSL_CERT;
    ssl_certificate_key     SSL_KEY;
    ssl_trusted_certificate SSL_CHAIN_CERT;

    client_max_body_size 2M;

    location / {
        proxy_set_header        Host $http_host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;

        # use the mapped hostname and port for a proxy target
        proxy_pass              "http://$dev_pass_route";
    }
}